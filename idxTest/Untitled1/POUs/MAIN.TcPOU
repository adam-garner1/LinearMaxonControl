<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="MAIN" Id="{4e8483c1-ccbb-4128-b543-7a53eb2e77a5}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	Linear: AXIS_REF;
	fbTest : TestMode();
		
	fbIDX70 :IDXMotor();
	fbEverest :EverestMC();
	IdxEnable:BOOL;
	EveEnable:BOOL;
	idxState AT%I* :WORD;
	idxInput AT%I*	:BYTE;
	idxCTRL1 AT%I*:USINT;
	MovementTarget:LREAL;
	MovementVelocity:LREAL:=50;
	Distance: LREAL;
	JogStart: BOOL;
	StartMove:BOOL;
	fbMessage : FB_TcMessage;
	Homed:BOOL;
	Ready:BOOL;
	Homing :BOOL;
	Estop: BOOL;
	Home :BOOL:=FALSE;
	resetAxis :BOOL:=FALSE;
	TestingMode: BOOL := FALSE;
	StartTestMode:BOOL;
	EndTest :bool := False;
	ResetTimer: TON :=(PT:=T#5S,IN:=FALSE);

	(* fbMqttClient : FB_IotMqttClient;
	SetParameter : BOOL :=TRUE;
	mqttConnect : BOOL :=TRUE;
	(*publish settings*)
	TopicPub   : STRING(255) := 'PLC';
    PayloadPub : STRING(255);
	MQTTi :UDINT;
	

	 (* received message *)
    Subscribed    : BOOL;
    TopicSub      : STRING(255) := 'PLC/Telemetry';
    {attribute 'TcEncoding':='UTF-8'}
    sTopicRcv      : STRING(255);
    {attribute 'TcEncoding':='UTF-8'}
    sPayloadRcv    : STRING(255);
    fbMessageQueue : FB_IotMqttMessageQueue;
    fbMessage      : FB_IotMqttMessage;
	
	fbMQTTtimer : TON :=(PT:=T#1S);
	*)
	
	

	
	
(*
	TestPosA: REAL :=200;
	TestPosB: REAL :=100;
	MoveAbsDone: BOOL := TRUE;
	TestingFlag: BOOL := FALSE;
	TestingActive:BOOL :=FALSE;

	TestingTime: TON:=(pt:=T#5S);
	ResetConfirmation: BOOL;
	timerON :BOOL := FALSE;*)

	AxisStatus: ST_AxisStatus;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Linear.ReadStatus();

fbIDX70();// error checking 
Ready:=fbIDX70.Enable(EnableMotor:= IdxEnable);
fbEverest.Enable(EnableMotor:= EveEnable);
fbIDX70.Reset(resetAxis:=resetAxis,IDXControlByte1:= idxCTRL1);// set to check for completeion
fbIDX70.MoveTo(Position:=MovementTarget,Velocity:=MovementVelocity,Execute:=StartMove);
fbIDX70.MoveRelative(Distance:=Distance,Velocity:=MovementVelocity,Execute:=JogStart);

//fbIDX70.Status(Status=>AxisStatus);
//AxisStatus := fbIDX70.Status();
//autoreset motor 
IF fbIDX70.MotorError =33154 AND ResetTimer.Q THEN
	ResetTimer(IN :=FALSE);
	resetAxis:=TRUE;	
END_IF
ResetTimer(IN:=TRUE);


// Home Axis
Homing := fbIDX70.Home(Execute:=Home);
Homed :=fbIDX70.Homed();

Estop :=  NOT idxinput.0; 

IF Estop THEN  //Estop check
	fbIDX70.Estop();// needs implementing  as event and quick stop function
	IdxEnable:=FALSE;	
END_IF
fbTest(TestingActive => TestingMode);
fbTest.StartTest(
			PositionA:=450,
			PositionB:=50,
			Velocity:=100,
			Axis:=fbIDX70
			,Dwell :=T#5S,
			Execute:=StartTestMode);
fbTest.EndTest(END := EndTest);			

]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="2" Count="0" />
      <LineId Id="715" Count="0" />
      <LineId Id="694" Count="0" />
      <LineId Id="620" Count="0" />
      <LineId Id="860" Count="0" />
      <LineId Id="714" Count="0" />
      <LineId Id="793" Count="0" />
      <LineId Id="853" Count="0" />
      <LineId Id="939" Count="0" />
      <LineId Id="722" Count="0" />
      <LineId Id="941" Count="0" />
      <LineId Id="721" Count="0" />
      <LineId Id="723" Count="0" />
      <LineId Id="788" Count="0" />
      <LineId Id="726" Count="0" />
      <LineId Id="725" Count="0" />
      <LineId Id="790" Count="1" />
      <LineId Id="717" Count="3" />
      <LineId Id="288" Count="0" />
      <LineId Id="287" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="284" Count="0" />
      <LineId Id="696" Count="0" />
      <LineId Id="285" Count="1" />
      <LineId Id="927" Count="0" />
      <LineId Id="929" Count="7" />
      <LineId Id="196" Count="0" />
      <LineId Id="66" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>