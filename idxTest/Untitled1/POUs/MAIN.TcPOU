<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="MAIN" Id="{4e8483c1-ccbb-4128-b543-7a53eb2e77a5}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	Linear: AXIS_REF;
		
	fbIDX70 :IDXMotor();
	IdxEnable:BOOL;
	idxState AT%I* :WORD;
	idxInput AT%I*	:BYTE;
	idxCTRL1 AT%I*:USINT;
	MovementTarget:LREAL;
	MovementVelocity:LREAL:=50;
	StartMove:BOOL;
	fbMessage : FB_TcMessage;
	Homed:BOOL;
	Ready:BOOL;
	Homing :BOOL;
	Estop: BOOL;
	Home :BOOL:=FALSE;
	resetAxis :BOOL:=FALSE;
	TestingMode: BOOL := FALSE;
	ResetTimer: TON :=(PT:=T#5S,IN:=FALSE);

	(* fbMqttClient : FB_IotMqttClient;
	SetParameter : BOOL :=TRUE;
	mqttConnect : BOOL :=TRUE;
	(*publish settings*)
	TopicPub   : STRING(255) := 'PLC';
    PayloadPub : STRING(255);
	MQTTi :UDINT;
	

	 (* received message *)
    Subscribed    : BOOL;
    TopicSub      : STRING(255) := 'PLC/Telemetry';
    {attribute 'TcEncoding':='UTF-8'}
    sTopicRcv      : STRING(255);
    {attribute 'TcEncoding':='UTF-8'}
    sPayloadRcv    : STRING(255);
    fbMessageQueue : FB_IotMqttMessageQueue;
    fbMessage      : FB_IotMqttMessage;
	
	fbMQTTtimer : TON :=(PT:=T#1S);
	*)
	
	

	
	
(*
	TestPosA: REAL :=200;
	TestPosB: REAL :=100;
	MoveAbsDone: BOOL := TRUE;
	TestingFlag: BOOL := FALSE;
	TestingActive:BOOL :=FALSE;

	TestingTime: TON:=(pt:=T#5S);
	ResetConfirmation: BOOL;
	timerON :BOOL := FALSE;*)
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Linear.ReadStatus();

fbIDX70();// error checking 
Ready:=fbIDX70.Enable(EnableMotor:= IdxEnable);
fbIDX70.Reset(resetAxis:=resetAxis,IDXControlByte1:= idxCTRL1);// set to check for completeion
fbIDX70.MoveTo(Position:=MovementTarget,Velocity:=MovementVelocity,Execute:=StartMove);

//autoreset motor 
IF fbIDX70.MotorError =33154 AND ResetTimer.Q THEN
	ResetTimer(IN :=FALSE);
	resetAxis:=TRUE;	
END_IF
ResetTimer(IN:=TRUE);


// Home Axis
Homing := fbIDX70.Home(Execute:=Home);
Homed :=fbIDX70.Homed();

Estop :=  NOT idxinput.3; 

IF Estop THEN  //Estop check
	fbIDX70.Estop();// needs implementing  as event and quick stop function
	IdxEnable:=FALSE;	
END_IF

	
(*IF TestingMode THEN // in test class uses idx class functions 
	IF NOT TestingActive THEN// code runs at start 
		bMove:=TRUE;
		fTargetPosition:= TestPosA;
		TestingActive := TRUE;
	END_IF
	

 IF fbAxisMoveAbsolute.Done THEN
	 TimerON:=TRUE;
 END_IF

IF TestingTime.Q THEN
	TimerON:=FALSE;
	bMove:=TRUE;
	TestingFlag := NOT TestingFlag;
	IF TestingFlag THEN// change targets 
		fTargetPosition:= TestPosA;
	ELSE 
		fTargetPosition:= TestPosB;
	END_IF
END_IF
ELSE 
	TestingActive:= FALSE;
	TimerON:=FALSE;
	TestingFlag:=TRUE;
END_IF
TestingTime(IN:=TimerON);*)
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="2" Count="0" />
      <LineId Id="715" Count="0" />
      <LineId Id="694" Count="0" />
      <LineId Id="620" Count="0" />
      <LineId Id="714" Count="0" />
      <LineId Id="793" Count="0" />
      <LineId Id="722" Count="0" />
      <LineId Id="721" Count="0" />
      <LineId Id="723" Count="0" />
      <LineId Id="788" Count="0" />
      <LineId Id="726" Count="0" />
      <LineId Id="725" Count="0" />
      <LineId Id="790" Count="1" />
      <LineId Id="717" Count="3" />
      <LineId Id="288" Count="0" />
      <LineId Id="287" Count="0" />
      <LineId Id="347" Count="0" />
      <LineId Id="284" Count="0" />
      <LineId Id="696" Count="0" />
      <LineId Id="285" Count="1" />
      <LineId Id="440" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="482" Count="0" />
      <LineId Id="486" Count="0" />
      <LineId Id="495" Count="0" />
      <LineId Id="489" Count="0" />
      <LineId Id="487" Count="0" />
      <LineId Id="490" Count="0" />
      <LineId Id="515" Count="0" />
      <LineId Id="496" Count="0" />
      <LineId Id="520" Count="0" />
      <LineId Id="517" Count="0" />
      <LineId Id="501" Count="0" />
      <LineId Id="500" Count="0" />
      <LineId Id="518" Count="0" />
      <LineId Id="505" Count="1" />
      <LineId Id="508" Count="3" />
      <LineId Id="507" Count="0" />
      <LineId Id="503" Count="0" />
      <LineId Id="485" Count="0" />
      <LineId Id="488" Count="0" />
      <LineId Id="498" Count="0" />
      <LineId Id="513" Count="0" />
      <LineId Id="483" Count="0" />
      <LineId Id="481" Count="0" />
      <LineId Id="66" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>